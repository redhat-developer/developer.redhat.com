<?php

/**
 * @file
 * Functions to support theming in the RHDP2 theme.
 */

use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_preprocess_assembly().
 */
function rhdp2_preprocess_assembly(&$variables) {
  $assembly = $variables['elements']['#assembly'];
  $type = $assembly->bundle();

  $variables['background_image_url'] = FALSE;
  $image_value = FALSE;
  $svg_value = FALSE;

  if ($assembly->hasField('field_background_image')) {
    $image_value = $assembly->get('field_background_image')->getValue();
  }

  if ($assembly->hasField('field_background_svg')) {
    $svg_value = $assembly->get('field_background_svg')->getValue();
  }

  if ($svg_value) {
    $file_id = $svg_value[0]['target_id'];
    $uri = File::load($file_id)->getFileUri();
    $variables['background_image_url'] = file_create_url($uri);
    $variables['attributes']->addClass('has-background');
  } else if ($image_value) {
    $file_id = $image_value[0]['target_id'];
    $uri = File::load($file_id)->getFileUri();
    $variables['background_image_url'] = ImageStyle::load('billboard')->buildUrl($uri);
    $variables['attributes']->addClass('has-background');
  }


  if ($assembly->hasField('field_audience_selection')) {
    $field_audience_selection_values = $assembly->get('field_audience_selection')->getValue();
    $variables['audience_selection'] = '';

    if ($field_audience_selection_values) {
      $audience_selection_values = [];

      foreach ($field_audience_selection_values as $field_audience_selection_value) {
        $audience_selection_values[] = $field_audience_selection_value['value'];
      }

      $audience_selection = implode(',', $audience_selection_values);
      $variables['audience_selection'] = " data-audience={$audience_selection}";
    }
  }

  // Code Snippet assembly type.
  if ($type == 'code_snippet') {
    // Code field.
    if ($assembly->hasField('field_code')) {
      // Verify that the field isset before retrieving the value.
      if (isset($assembly->field_code)) {
        $field_code = $assembly->get('field_code')->getValue()[0]['value'];
        $variables['code'] = $field_code;
      }
      $variables['#attached']['library'][] = 'rhdp2/highlight-js';
    }
    // Programming Language field.
    if ($assembly->hasField('field_programming_language')) {
      // Verify that the field isset before retrieving the value.
      if (isset($assembly->field_programming_language)) {
        $language = $assembly->get('field_programming_language')->getValue()[0]['value'];
        $variables['language'] = isset($language) ? $language : '';
      }
    }
  }
}

/**
 * Implements hook_preprocess_block().
 */
function rhdp2_preprocess_block(array &$variables) {
  // Verify that the #id has some non-empty value prior to using it.
  if (!empty($variables['elements']['#id'])) {
    $block_id = $variables['elements']['#id'];

    if ($block_id == 'rhdp2_rhdnavigation_mobile') {
      $variables['attributes']['class'][] = 'rhd-nav-mobile';
    }

    if ($block_id == 'rhdp2_rhdnavigation') {
      $variables['attributes']['class'][] = 'rhd-nav-fixed';
    }
  }
}

/**
 * Implements template_preprocess_field().
 */
function rhdp2_preprocess_field(&$variables, $hook) {
  if ($variables['field_type'] === 'video_embed_field' && !empty($variables['items'][0])) {
    $variables['items'][0]['content']['#attached']['library'][] = 'rhdp2/video_embed_field.responsive-video';
  }
}
