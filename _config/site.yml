kramdown:
  :input: 'QuickStartParser'
generation:
  :in_processes: 5
asciidoctor:
  :attributes:
    sectanchors: ''
slim|html:
  :format: :html
slim:
  :attr_list_delims:
    '(': ')'
    '[': ']'
download_manager_file_base_url: //developers.redhat.com/download-manager/file/
download_manager_base_url: https://developers.redhat.com
product_documentation_base_url: https://access.redhat.com/site/documentation/en-US/
product_forum_base_url: https://developer.jboss.org/en/products/
vimeo_client_id: 2589d6592dfd44bfec54f22edf766aedaf0fd5d7
vimeo_access_token: 1ad6583e71e183c3075a88d46ebb0675
change_frequency: daily
keycloak_account_url: https://developers.redhat.com/auth/realms/rhd/account/
keycloak_auth_url: https://developers.redhat.com/auth/
searchisko_warnings: _site/searchisko_warnings.json
application_name: Red Hat Developers
application_version: 1
under_development: false

deploy_base: &deploy
  host: rhd@filemgmt.jboss.org
  cdn_host: rhd@filemgmt.jboss.org
  cdn_path: /static_htdocs/rhd
  uncommitted: true

profile_base: &profile
  cdn_http_base: &cdn_http_base //static.jboss.org/rhd
  cdn_out_dir: &cdn_out_dir _tmp
  cdn_version: &cdn_version true
  log_faraday: true
  push_to_searchisko: true
  minify: &minify true
  robots:
    disallow: true
  deploy:
    <<: *deploy
  scss:
    :style: :compressed
    # Nice big hack:
    :cdn_http_base: *cdn_http_base
    :cdn_out_dir: *cdn_out_dir
    :minify: *minify
    :cdn_version: *cdn_version
  authenticate_google_books_api: true
  build_threads: 40
  cache_type: :external

profiles:
  development: &development
    dcp_base_url: http://dcp.stage.jboss.org/
    dcp_base_protocol_relative_url: //dcp.stage.jboss.org/
    keycloak_account_url: https://it-developers.stage.redhat.com/auth/realms/rhd/account/
    keycloak_auth_url: https://it-developers.stage.redhat.com/auth/
    download_manager_file_base_url: //it-developers.stage.redhat.com/download-manager/file/
    download_manager_base_url: https://it-developers.stage.redhat.com
    log_faraday: true
    push_to_searchisko: false
    metrics: false
    authenticate_google_books_api: false
    build_threads: 0
    cache_type: :local

  docker: &docker
    <<: *development
    base_url: http://docker:<%= ENV['AWESTRUCT_HOST_PORT'] %>/
    port: <%= ENV['AWESTRUCT_HOST_PORT'] %>
    dcp_base_url: http://searchisko:8080/
    dcp_base_protocol_relative_url: //docker:<%= ENV['SEARCHISKO_HOST_PORT'] %>/
    push_to_searchisko: true

  drupal:
    <<: *docker
    base_url: http://<%= ENV['DRUPAL_HOST_IP'] %>:<%= ENV['DRUPAL_HOST_PORT'] %>/
    drupal_base_url: http://drupal/
    # In Drupal, Drupal will be the cdn
    cdn_http_base: &drupal_cdn_http_base http://<%= ENV['DRUPAL_HOST_IP'] %>:<%= ENV['DRUPAL_HOST_PORT'] %>/
    cdn_out_dir: &drupal_cdn_out_dir _site
    cdn_version: &drupal_cdn_version false
    # This may not be needed, but as long as we're still building the css in awestruct we'll need it
    scss:
      # Nice big hack:
      :cdn_http_base: *drupal_cdn_http_base
      :cdn_out_dir: *drupal_cdn_out_dir
      :cdn_version: *drupal_cdn_version

  development_cdn:
    <<: *development
    cdn_http_base: &dev_cdn_http_base http://localhost:4242/cdn
    cdn_out_dir: &dev_cdn_out_dir _site
    cdn_version: &dev_cdn_version false
    scss:
      # Nice big hack:
      :cdn_http_base: *dev_cdn_http_base
      :cdn_out_dir: *dev_cdn_out_dir
      :cdn_version: *dev_cdn_version

  # Docker staging configuration (PR and Nightly)
  staging_docker:
    <<: *profile
    dcp_base_url: http://searchisko:8080/
    dcp_base_protocol_relative_url: //<%= ENV['ACCESSIBLE_SLAVE_IP'] %>:<%= ENV['SEARCHISKO_HOST_PORT'] %>/
    keycloak_account_url: https://it-developers.stage.redhat.com/auth/realms/rhd/account/
    keycloak_auth_url: https://it-developers.stage.redhat.com/auth/
    download_manager_file_base_url: //it-developers.stage.redhat.com/download-manager/file/
    download_manager_base_url: https://it-developers.stage.redhat.com

    cache_type: :local
    metrics: true
    deploy:
      <<: *deploy
      path: /stg_htdocs/it-rhd-stg

  # Pull Request configuration (Not with Docker)
  staging:
    <<: *profile
    dcp_base_protocol_relative_url: //<%= ENV['STAGE_SEARCHISKO_HOST'] %>:<%= ENV['STAGE_SEARCHISKO_PORT'] %>/
    dcp_base_url: http://<%= ENV['STAGE_SEARCHISKO_HOST'] %>:<%= ENV['STAGE_SEARCHISKO_PORT'] %>/
    keycloak_account_url: https://it-developers.stage.redhat.com/auth/realms/rhd/account/
    keycloak_auth_url: https://it-developers.stage.redhat.com/auth/
    download_manager_file_base_url: //it-developers.stage.redhat.com/download-manager/file/
    download_manager_base_url: https://it-developers.stage.redhat.com
    metrics: false
    deploy:
      <<: *deploy
      path: /stg_htdocs/it-rhd-stg

  # Main staging configuration (on IT's Infr)
  staging_main_it:
    <<: *profile
    base_url: http://it-developers.stage.redhat.com/
    download_manager_file_base_url: //it-developers.stage.redhat.com/download-manager/file/
    download_manager_base_url: https://it-developers.stage.redhat.com
    dcp_base_url: http://dcp.stage.jboss.org/
    dcp_base_protocol_relative_url: //dcp.stage.jboss.org/
    keycloak_account_url: https://it-developers.stage.redhat.com/auth/realms/rhd/account/
    keycloak_auth_url: https://it-developers.stage.redhat.com/auth/
    metrics: true
    build_threads: 1
    dtm_code: //assets.adobedtm.com/2b327a0a54b320bf1bcdb5fa39a2b896027067d9/satelliteLib-9ec3c34e9d660fa2fcb85ced512c3a48dc09c0c5-staging.js
    deploy:
      <<: *deploy
      path: /stg_htdocs/it-rhd-stg-main

  production:
    <<: *profile
    base_url: http://developers.redhat.com/
    dcp_base_protocol_relative_url: //dcp2.jboss.org/
    dcp_base_url: http://dcp2.jboss.org/
    require_tag: true
    metrics: true
    disqus: jdf
    dtm_mode: //assets.adobedtm.com/2b327a0a54b320bf1bcdb5fa39a2b896027067d9/satelliteLib-9ec3c34e9d660fa2fcb85ced512c3a48dc09c0c5.js

    robots:
      disallow: false
    deploy:
      <<: *deploy
      path: /www_htdocs/it-rhd
