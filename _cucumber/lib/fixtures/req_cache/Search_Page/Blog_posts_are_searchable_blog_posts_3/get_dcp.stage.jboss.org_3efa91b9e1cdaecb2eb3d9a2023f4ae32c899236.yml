---
:scope: 
:url: https://dcp.stage.jboss.org/v2/rest/search/developer_materials?from=0&project=&query=Gems:+A+Few+Helpful+dotnet+commands&query_highlight=true&size10=true&type=rht_website&type=jbossdeveloper_book&type=jbossdeveloper_event&type=rht_knowledgebase_article&type=rht_knowledgebase_solution&type=stackoverflow_question&type=jbossorg_sbs_forum&type=jbossorg_blog
:body: ''
:status: 200
:method: get
:headers:
  Server: Apache-Coyote/1.1
  Pragma: No-cache
  Cache-Control: no-cache
  Expires: Wed, 31 Dec 1969 19:00:00 EST
  Access-Control-Allow-Origin: https://developers-pr.stage.redhat.com
  Content-Type: application/json
  Date: Wed, 08 Feb 2017 12:54:16 GMT
  Connection: close
  Set-Cookie: BigIP.dcp.stage.jboss.org=rd221o00000000000000000000ffff0a196a38o8080;
    path=/
:content: !binary |-
  eyJ1dWlkIjoiMmM3ZTQ2NDktN2E4OC00OWNmLWFhYjYtNGU4MDQ5ZmViZTI2
  IiwidG9vayI6MTYwLCJ0aW1lZF9vdXQiOmZhbHNlLCJfc2hhcmRzIjp7InRv
  dGFsIjoyNCwic3VjY2Vzc2Z1bCI6MjQsImZhaWxlZCI6MH0sImhpdHMiOnsi
  dG90YWwiOjQxMjgsIm1heF9zY29yZSI6Mi41NjM1Mzg2LCJoaXRzIjpbeyJf
  aW5kZXgiOiJkYXRhX2pib3Nzb3JnX2Jsb2ciLCJfdHlwZSI6Impib3Nzb3Jn
  X2Jsb2dwb3N0IiwiX2lkIjoiamJvc3NvcmdfYmxvZy1nZW1zX2FfZmV3X2hl
  bHBmdWxfZG90bmV0X2NvbW1hbmRzIiwiX3Njb3JlIjoyLjU2MzUzODYsImZp
  ZWxkcyI6eyJzeXNfY3JlYXRlZCI6WyIyMDE2LTA3LTIyVDE3OjA0OjUwLjAw
  MFoiXSwic3lzX2Rlc2NyaXB0aW9uIjpbIlRoaXMgcG9zdCBtYXkgYmUgc2hv
  cnQsIGJ1dCBpZiB5b3XigJlyZSBuZXcgdG8gLk5FVCBDb3JlLCBpdOKAmXMg
  dmFsdWFibGUuIEFmdGVyIGluc3RhbGxpbmcgLk5FVCBvbiBSSEVMLCB5b3Ug
  d2FudCB0byBnZXQgdXAgYW5kIHJ1bm5pbmcgYXMgcXVpY2tseSBhcyBwb3Nz
  aWJsZS4gQWZ0ZXIgYWxsLCB3aGF0IGdvb2QgaXMgYSBmcmFtZXdvcmsgd2l0
  aG91dCBhbnl0aGluZyB0byDigKYiXSwic3lzX3VybF92aWV3IjpbImh0dHA6
  Ly9kZXZlbG9wZXJzLnJlZGhhdC5jb20vYmxvZy8yMDE2LzA3LzIyL2dlbXMt
  YS1mZXctaGVscGZ1bC1kb3RuZXQtY29tbWFuZHMvIl0sInN5c190eXBlIjpb
  ImJsb2dwb3N0Il0sInN5c190YWdzIjpbImZlZWRfZ3JvdXBfbmFtZV9ub25t
  aWRkbGV3YXJlIiwiZmVlZF9uYW1lX3JlZGhhdF9kZXZlbG9wZXJfYmxvZyIs
  IlVuY2F0ZWdvcml6ZWQiXSwic3lzX3RpdGxlIjpbIkdlbXM6IEEgRmV3IEhl
  bHBmdWwgZG90bmV0IGNvbW1hbmRzIl19LCJoaWdobGlnaHQiOnsic3lzX3Rp
  dGxlIjpbIjxzcGFuIGNsYXNzPSdobHQnPkdlbXM8L3NwYW4+OiBBIDxzcGFu
  IGNsYXNzPSdobHQnPkZldzwvc3Bhbj4gPHNwYW4gY2xhc3M9J2hsdCc+SGVs
  cGZ1bDwvc3Bhbj4gPHNwYW4gY2xhc3M9J2hsdCc+ZG90bmV0PC9zcGFuPiA8
  c3BhbiBjbGFzcz0naGx0Jz5jb21tYW5kczwvc3Bhbj4iXX19LHsiX2luZGV4
  IjoiZGF0YV9yaHRfd2Vic2l0ZSIsIl90eXBlIjoicmh0X3dlYnNpdGUiLCJf
  aWQiOiJyaHRfd2Vic2l0ZS1odHRwc19kZXZlbG9wZXJzX3JlZGhhdF9jb21f
  bm9kZV8yNzQ1IiwiX3Njb3JlIjoxLjAzOTE1NTIsImZpZWxkcyI6eyJzeXNf
  ZGVzY3JpcHRpb24iOlsiTGVhcm4gaG93IHRvIGluc3RhbGwgYW5kIHN0YXJ0
  IHVzaW5nIERvdE5ldC4iXSwic3lzX3VybF92aWV3IjpbImh0dHBzOi8vZGV2
  ZWxvcGVycy5yZWRoYXQuY29tL25vZGUvMjc0NSJdLCJzeXNfY29udGVudF9w
  bGFpbnRleHQiOlsiLk5FVCBSdW50aW1lIGZvciBSZWQgSGF0IExpbnV4IEJ1
  aWxkIGFuZCBydW4gY3Jvc3MtcGxhdGZvcm0gLk5FVCBhcHBsaWNhdGlvbnMg
  b24gdGhlIHdvcmxkJ3MgbnVtYmVyIG9uZSBlbnRlcnByaXNlLXJlYWR5IExp
  bnV4IGRpc3RyaWJ1dGlvbiwgUmVkIEhhdCBFbnRlcnByaXNlIExpbnV4LiAu
  TkVUIFJ1bnRpbWUgZm9yIFJlZCBIYXQgTGludXggTW9yZSBPdmVydmlldyBH
  ZXQgU3RhcnRlZCBEb2NzIGFuZCBBUElzIEhlbHAgVGhhbmsgeW91IGZvciBk
  b3dubG9hZGluZyBZb3VyIGRvd25sb2FkIHNob3VsZCBzdGFydCBhdXRvbWF0
  aWNhbGx5LiBJZiB5b3UgaGF2ZSBhbnkgcHJvYmxlbXMgd2l0aCB0aGUgZG93
  bmxvYWQsIHBsZWFzZSB1c2UgdGhlIGRpcmVjdCBsaW5rIC4gQnkgZG93bmxv
  YWRpbmcgdGhpcyBwcm9kdWN0IHlvdSBoYXZlIGFncmVlZCB3aXRoIG91ciB0
  ZXJtcyBhbmQgY29uZGl0aW9ucyBvbiAuIFlvdSB3aWxsIGJlIG5vdGlmaWVk
  IGFnYWluIGluIGFmdGVyIHlvdXIgc3Vic2NyaXB0aW9uIGVuZHMuIDEuIEVu
  YWJsZSAuTkVUIENvcmUgUmVwb3NpdG9yeSAyIG1pbnV0ZXMgMi4gU2V0IFVw
  IFlvdXIgRGV2ZWxvcG1lbnQgRW52aXJvbm1lbnQgMiBtaW51dGVzIDMuIEhl
  bGxvIFdvcmxkIGFuZCBZb3VyIEZpcnN0IEFwcGxpY2F0aW9uIDIgbWludXRl
  cyBJbnRyb2R1Y3Rpb24gYW5kIFByZXJlcXVpc2l0ZXMgSW4gdGhpcyB0dXRv
  cmlhbCwgeW91IHdpbGwgc2V0IHVwIHlvdXIgc3lzdGVtIHRvIGluc3RhbGwg
  c29mdHdhcmUgZnJvbSB0aGUgUmVkIEhhdCAuTkVUIHJlcG9zaXRvcnksIHdo
  aWNoIHByb3ZpZGVzIHRoZSBsYXRlc3QgdmVyc2lvbnMgb2YgLk5FVCBDb3Jl
  IGZvciBSZWQgSGF0IEVudGVycHJpc2UgTGludXguIFlvdSB3aWxsIGluc3Rh
  bGwgLk5FVCBDb3JlIGFuZCBydW4gYSBzaW1wbGUgXCJIZWxsbywgV29ybGRc
  IiBhcHBsaWNhdGlvbi4gVGhlIHR1dG9yaWFsIHNob3VsZCB0YWtlIGxlc3Mg
  dGhhbiAxMCBtaW51dGVzIHRvIGNvbXBsZXRlLiBCZWZvcmUgeW91IGJlZ2lu
  LCB5b3Ugd2lsbCBuZWVkIGEgY3VycmVudCBSZWQgSGF0IEVudGVycHJpc2Ug
  TGludXggNyBTZXJ2ZXIgb3IgV29ya3N0YXRpb24gc3Vic2NyaXB0aW9uIHRo
  YXQgYWxsb3dzIHlvdSB0byBkb3dubG9hZCBzb2Z0d2FyZSBhbmQgZ2V0IHVw
  ZGF0ZXMgZnJvbSBSZWQgSGF0LiBEZXZlbG9wZXJzIGNhbiBnZXQgYSBuby1j
  b3N0IFJlZCBIYXQgRW50ZXJwcmlzZSBMaW51eCBEZXZlbG9wZXIgU3VpdGUg
  U3Vic2NyaXB0aW9uIGZvciBkZXZlbG9wbWVudCBwdXJwb3NlcyBieSByZWdp
  c3RlcmluZyBhbmQgZG93bmxvYWRpbmcgdGhyb3VnaCBkZXZlbG9wZXJzLnJl
  ZGhhdC5jb20gLiBVc2luZyBWaXJ0dWFsQm94PyBZb3XigJlsbCBmaW5kIGlu
  c3RydWN0aW9ucyBoZXJlIC4gSHlwZXItVj8gWW91ciBpbnN0cnVjdGlvbnMg
  YXJlIGhlcmUgLiBWTVdhcmU/IEhlcmUgaXMgeW91ciBsaW5rLiBLVk0gdXNl
  cnMsIHRoaXMgd2F5ICwgcGxlYXNlLiBGaW5hbGx5LCB5ZXMsIHlvdSBjYW4g
  aW5zdGFsbCBvbiBiYXJlIG1ldGFsIGlmIHlvdSB3aXNoLiBIZXJlIGlzIHlv
  dXIgcGFnZS4gQmUgc3VyZSB0byByZWdpc3RlciBhbmQgYXR0YWNoIGEgc3Vi
  c2NyaXB0aW9uIHRvIHlvdXIgUmVkIEhhdCBFbnRlcnByaXNlIExpbnV4IDcg
  aW5zdGFsbGF0aW9uIHRvIGdldCBhY2Nlc3MgdG8gLk5FVCByZXBvc2l0b3Jp
  ZXMuIElmIHRoaXMgaXMgYSBWTSwgeW91IGNhbiByZWdpc3RlciBhbmQgYXR0
  YWNoIGJ5IHVzaW5nIHN1YnNjcmlwdGlvbi1tYW5hZ2VyIDogJCBzdSAtICMg
  c3Vic2NyaXB0aW9uLW1hbmFnZXIgcmVnaXN0ZXIgLS1hdXRvLWF0dGFjaCBJ
  ZiB5b3UgbmVlZCBoZWxwLCBzZWUgVHJvdWJsZXNob290aW5nIGFuZCBGQVEg
  LiAxLiBFbmFibGUgLk5FVCBDb3JlIFJlcG9zaXRvcnkgMiBtaW51dGVzIElu
  IHRoaXMgc3RlcCwgeW91IHdpbGwgY29uZmlndXJlIHlvdXIgc3lzdGVtIHRv
  IG9idGFpbiBzb2Z0d2FyZSwgaW5jbHVkaW5nIHRoZSBsYXRlc3QgLk5FVCBD
  b3JlIGZyb20gdGhlIC5ORVQgc29mdHdhcmUgcmVwb3NpdG9yeS4gSW5zdHJ1
  Y3Rpb25zIGFyZSBwcm92aWRlZCBmb3IgYm90aCB0aGUgY29tbWFuZCBsaW5l
  IGludGVyZmFjZSAoQ0xJKSBhbmQgdGhlIGdyYXBoaWNhbCB1c2VyIGludGVy
  ZmFjZSAoR1VJKS4gVXNpbmcgdGhlIFJlZCBIYXQgU3Vic2NyaXB0aW9uIE1h
  bmFnZXIgR1VJIFN0YXJ0IFJlZCBIYXQgU3Vic2NyaXB0aW9uIE1hbmFnZXIg
  dXNpbmcgdGhlIFN5c3RlbSBUb29scyBncm91cCBvZiB0aGUgQXBwbGljYXRp
  b25zIG1lbnUuIEFsdGVybmF0aXZlbHksIHlvdSBjYW4gc3RhcnQgaXQgZnJv
  bSB0aGUgY29tbWFuZCBwcm9tcHQgYnkgdHlwaW5nIHN1YnNjcmlwdGlvbi1t
  YW5hZ2VyLWd1aSAuIFNlbGVjdCBSZXBvc2l0b3JpZXMgZnJvbSB0aGUgU3lz
  dGVtIG1lbnUgb2YgdGhlIHN1YnNjcmlwdGlvbiBtYW5hZ2VyLiBJbiB0aGUg
  bGlzdCBvZiByZXBvc2l0b3JpZXMsIGNoZWNrIHRoZSBFbmFibGVkIGNvbHVt
  biBmb3IgcmhlbC03LXNlcnZlci1kb3RuZXQtcnBtcyAuIElmIHlvdSBhcmUg
  dXNpbmcgYSBXb3Jrc3RhdGlvbiB2ZXJzaW9uIG9mIFJlZCBIYXQgRW50ZXJw
  cmlzZSBMaW51eCwgdGhlIHJlcG9zaXRvcnkgd2lsbCBiZSBuYW1lZCByaGVs
  LTctd29ya3N0YXRpb24tZG90bmV0LXJwbXMgLiBOb3RlOiBBZnRlciBjbGlj
  a2luZywgaXQgbWlnaHQgdGFrZSBzZXZlcmFsIHNlY29uZHMgZm9yIHRoZSBj
  aGVja21hcmsgdG8gYXBwZWFyIGluIHRoZSBlbmFibGVkIGNvbHVtbi4gSWYg
  eW91IGRvbuKAmXQgc2VlIGFueSAuTkVUIHJlcG9zaXRvcmllcyBpbiB0aGUg
  bGlzdCwgeW91ciBzdWJzY3JpcHRpb24gbWlnaHQgbm90IGluY2x1ZGUgaXQu
  IFNlZSBUcm91Ymxlc2hvb3RpbmcgYW5kIEZBUSBmb3IgbW9yZSBpbmZvcm1h
  dGlvbi4gVXNpbmcgc3Vic2NyaXB0aW9uLW1hbmFnZXIgZnJvbSB0aGUgY29t
  bWFuZCBsaW5lIFlvdSBjYW4gYWRkIG9yIHJlbW92ZSBzb2Z0d2FyZSByZXBv
  c2l0b3JpZXMgZnJvbSB0aGUgY29tbWFuZCBsaW5lIHVzaW5nIHRoZSBzdWJz
  Y3JpcHRpb24tbWFuYWdlciB0b29sIGFzIHRoZSByb290IHVzZXIuIFVzZSB0
  aGUgLS1saXN0IG9wdGlvbiB0byB2aWV3IHRoZSBhdmFpbGFibGUgc29mdHdh
  cmUgcmVwb3NpdG9yaWVzIGFuZCB2ZXJpZnkgdGhhdCB5b3UgaGF2ZSBhY2Nl
  c3MgdG8gLk5FVDogJCBzdSAtICMgc3Vic2NyaXB0aW9uLW1hbmFnZXIgcmVw
  b3MgLS1saXN0IHwgZWdyZXAgZG90bmV0IElmIHlvdSBkb27igJl0IHNlZSBh
  bnkgLk5FVCByZXBvc2l0b3JpZXMgaW4gdGhlIGxpc3QsIHlvdXIgc3Vic2Ny
  aXB0aW9uIG1pZ2h0IG5vdCBpbmNsdWRlIGl0LiBTZWUgVHJvdWJsZXNob290
  aW5nIGFuZCBGQVEgZm9yIG1vcmUgaW5mb3JtYXRpb24uIElmIHlvdSBhcmUg
  dXNpbmcgYSBXb3Jrc3RhdGlvbiBlZGl0aW9uIG9mIFJlZCBIYXQgRW50ZXJw
  cmlzZSBMaW51eCwgY2hhbmdlIC1zZXJ2ZXItIHRvIC13b3Jrc3RhdGlvbi0g
  aW4gdGhlIGZvbGxvd2luZyBjb21tYW5kOiAjIHN1YnNjcmlwdGlvbi1tYW5h
  Z2VyIHJlcG9zIC0tZW5hYmxlPXJoZWwtNy1zZXJ2ZXItZG90bmV0LXJwbXMg
  Mi4gU2V0IFVwIFlvdXIgRGV2ZWxvcG1lbnQgRW52aXJvbm1lbnQgMiBtaW51
  dGVzIE5leHQgc3RlcCwgaW5zdGFsbCAuTkVUIENvcmUgMS4wOiAkIHN1IC0g
  IyB5dW0gaW5zdGFsbCByaC1kb3RuZXRjb3JlMTAgMy4gSGVsbG8gV29ybGQg
  YW5kIFlvdXIgRmlyc3QgQXBwbGljYXRpb24gMiBtaW51dGVzIFVuZGVyIHlv
  dXIgbm9ybWFsIHVzZXIgSUQsIHN0YXJ0IGEgVGVybWluYWwgd2luZG93LiBG
  aXJzdCwgdXNlIHNjbCBlbmFibGUgdG8gYWRkIC5ORVQgQ29yZSAxLjAgdG8g
  eW91ciBlbnZpcm9ubWVudDogJCBzY2wgZW5hYmxlIHJoLWRvdG5ldGNvcmUx
  MCBiYXNoIEV2ZXJ5IHRpbWUgeW91IHN0YXJ0IGEgbmV3IHNoZWxsLCB5b3Xi
  gJlsbCBuZWVkIHRvIHJlLXJ1biB0aGUgc2NsIGVuYWJsZSBjb21tYW5kLiBD
  b25zaWRlciBlbmFibGluZyBpdCBwZXJtYW5lbnRseSAuIE5vdywgcnVuIGRv
  dG5ldCAtLXZlcnNpb24gdG8gc2VlIHRoZSB2ZXJzaW9uIG51bWJlcjogJCBk
  b3RuZXQgLS12ZXJzaW9uIEZpcnN0LCBydW4gZG90bmV0IG5ldyAuIFRoaXMg
  d2lsbCBjcmVhdGUgdGhlIEMjIHNvdXJjZSBjb2RlIGZvciB0aGUg4oCcSGVs
  bG8sIFdvcmxk4oCdIGFwcC4gWW91IGNhbiBsb29rIGFyb3VuZCB0aGUgc291
  cmNlIGNvZGUgYW5kIGFsbCB0aGUgZ2VuZXJhdGVkIGZpbGVzIHRvIGdldCBh
  IHNlbnNlIG9mIHdoYXTigJlzIG5lY2Vzc2FyeSB0byBzdXBwb3J0IGEgLk5F
  VCBDb3JlIGFwcGxpY2F0aW9uLiBOZXh0LCBydW4gZG90bmV0IHJlc3RvcmUg
  LiBUaGlzIHdpbGwgZmV0Y2ggYWxsIHRoZSBuZWNlc3NhcnkgZGVwZW5kZW5j
  eSBsaWJyYXJpZXMuIEZpbmFsbHksIHJ1biBkb3RuZXQgcnVuIC4gVGhpcyB3
  aWxsIGJ1aWxkIGFuZCBydW4gdGhlIGFwcGxpY2F0aW9uLiBOb3RlIHRoYXQg
  eW91IGNhbiBydW4gZG90bmV0IGJ1aWxkIGZpcnN0IGlmIHlvdSB3aXNoLCBi
  dXQgaXTigJlzIG5vdCBuZWNlc3NhcnkgZm9yIHRoaXMgc2ltcGxlIGNvbnNv
  bGUgYXBwbGljYXRpb24uIEluIHRoZSBmdXR1cmUsIHlvdeKAmWxsIHVzZSBk
  b3RuZXQgYnVpbGQgd2l0aCBjb21tYW5kIGxpbmUgb3B0aW9ucyB0byBkbyB0
  aGluZ3Mgc3VjaCBhcyBidWlsZCBzZWxmLWNvbnRhaW5lZCBhcHBsaWNhdGlv
  bnMsIHRoYXQgaXMsIGFwcHMgdGhhdCBjYW4gYmUgY29waWVkIGFuZCBydW4g
  d2l0aG91dCBhbnkgbmVlZCB0byBmaXJzdCBpbnN0YWxsIC5ORVQgQ29yZS4g
  V29ya2luZyB3aXRoIC5ORVQgQ29yZSBwYWNrYWdlcyBUaGUgLk5FVCBDb3Jl
  IHNvZnR3YXJlIHBhY2thZ2VzIGFyZSBkZXNpZ25lZCB0byBhbGxvdyBtdWx0
  aXBsZSB2ZXJzaW9ucyBvZiBzb2Z0d2FyZSB0byBiZSBpbnN0YWxsZWQgY29u
  Y3VycmVudGx5LiBUbyBhY2NvbXBsaXNoIHRoaXMsIHRoZSBkZXNpcmVkIHBh
  Y2thZ2UgaXMgYWRkZWQgdG8geW91ciBydW50aW1lIGVudmlyb25tZW50IGFz
  IG5lZWRlZCB3aXRoIHRoZSBzY2wgZW5hYmxlIGNvbW1hbmQuIFdoZW4gc2Ns
  IGVuYWJsZSBydW5zLCBpdCBtb2RpZmllcyBlbnZpcm9ubWVudCB2YXJpYWJs
  ZXMgYW5kIHRoZW4gcnVucyB0aGUgc3BlY2lmaWVkIGNvbW1hbmQuIFRoZSBl
  bnZpcm9ubWVudGFsIGNoYW5nZXMgb25seSBhZmZlY3QgdGhlIGNvbW1hbmQg
  dGhhdCBpcyBydW4gYnkgc2NsIGFuZCBhbnkgcHJvY2Vzc2VzIHRoYXQgYXJl
  IHJ1biBmcm9tIHRoYXQgY29tbWFuZC4gVGhlIHN0ZXBzIGluIHRoaXMgdHV0
  b3JpYWwgcnVuIHRoZSBjb21tYW5kIGJhc2ggdG8gc3RhcnQgYSBuZXcgaW50
  ZXJhY3RpdmUgc2hlbGwgdG8gd29yayBpbiB0aGUgdXBkYXRlZCBlbnZpcm9u
  bWVudC4gVGhlIGNoYW5nZXMgYXJlbuKAmXQgcGVybWFuZW50LiBUeXBpbmcg
  ZXhpdCB3aWxsIHJldHVybiB0byB0aGUgb3JpZ2luYWwgc2hlbGwgd2l0aCB0
  aGUgb3JpZ2luYWwgZW52aXJvbm1lbnQuIEVhY2ggdGltZSB5b3UgbG9naW4g
  b3Igc3RhcnQgYSBuZXcgdGVybWluYWwgc2Vzc2lvbiwgeW91IHdpbGwgbmVl
  ZCB0byBydW4gc2NsIGVuYWJsZSAuIFdoaWxlIGl0IGlzIHBvc3NpYmxlIHRv
  IGNoYW5nZSB0aGUgc3lzdGVtIHByb2ZpbGUgdG8gbWFrZSAuTkVUIENvcmUg
  cGFja2FnZXMgcGFydCBvZiB0aGUgc3lzdGVt4oCZcyBnbG9iYWwgZW52aXJv
  bm1lbnQsIHRoaXMgaXMgbm90IHJlY29tbWVuZGVkLiBEb2luZyB0aGlzIGNh
  biBjYXVzZSBjb25mbGljdHMgYW5kIHVuZXhwZWN0ZWQgcHJvYmxlbXMgd2l0
  aCBvdGhlciBhcHBsaWNhdGlvbnMgYmVjYXVzZSB0aGUgc3lzdGVtIHZlcnNp
  b24gb2YgdGhlIHBhY2thZ2UgaXMgb2JzY3VyZWQgYnkgaGF2aW5nIHRoZSBv
  dGhlciB2ZXJzaW9uIGluIHRoZSBwYXRoIGZpcnN0LiBQZXJtYW5lbnRseSBl
  bmFibGUgLk5FVCBDb3JlIGluIHlvdXIgZGV2ZWxvcG1lbnQgZW52aXJvbm1l
  bnQgVG8gbWFrZSB0aGUgLk5FVCBDb3JlIHBhY2thZ2VzIGEgcGVybWFuZW50
  IHBhcnQgb2YgeW91ciBkZXZlbG9wbWVudCBlbnZpcm9ubWVudCwgeW91IGNh
  biBhZGQgaXQgdG8gdGhlIGxvZ2luIHNjcmlwdCBmb3IgeW91ciBzcGVjaWZp
  YyB1c2VyIElELiBUaGlzIGlzIHRoZSByZWNvbW1lbmQgYXBwcm9hY2ggZm9y
  IGRldmVsb3BtZW50IGFzIG9ubHkgcHJvY2Vzc2VzIHJ1biB1bmRlciB5b3Vy
  IHVzZXIgSUQgd2lsbCBiZSBhZmZlY3RlZC4gVXNpbmcgeW91ciBwcmVmZXJy
  ZWQgdGV4dCBlZGl0b3IsIGFkZCB0aGUgZm9sbG93aW5nIGxpbmUgdG8geW91
  ciB+Ly5iYXNocmMgOiB+Ly5iYXNocmMgIyBBZGQgLk5FVCBDb3JlIDEuMCB0
  byBteSBsb2dpbiBlbnZpcm9ubWVudCBzb3VyY2Ugc2NsX3NvdXJjZSBlbmFi
  bGUgcmgtZG90bmV0Y29yZTEwIEFmdGVyIG1ha2luZyB0aGUgY2hhbmdlLCB5
  b3Ugc2hvdWxkIGxvZyBvdXQgYW5kIGxvZyBpbiBhZ2Fpbi4gV2hlbiB5b3Ug
  ZGVsaXZlciBhbiBhcHBsaWNhdGlvbiB0aGF0IHVzZXMgLk5FVCBDb3JlIHBh
  Y2thZ2VzLCBhIGJlc3QgcHJhY3RpY2UgaXMgdG8gaGF2ZSB5b3VyIHN0YXJ0
  dXAgc2NyaXB0IGhhbmRsZSB0aGUgc2NsIGVuYWJsZSBzdGVwIGZvciB5b3Vy
  IGFwcGxpY2F0aW9uLiBZb3Ugc2hvdWxkIG5vdCBhc2sgeW91ciB1c2VycyB0
  byBjaGFuZ2UgdGhlaXIgZW52aXJvbm1lbnQgYXMgdGhpcyBpcyBsaWtlbHkg
  dG8gY3JlYXRlIGNvbmZsaWN0cyB3aXRoIG90aGVyIGFwcGxpY2F0aW9ucy4g
  V2hlcmUgdG8gZ28gbmV4dD8gLk5FVCBDb3JlIERvY3VtZW50YXRpb24gYXQg
  ZG9jcy5taWNyb3NvZnQuY29tIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29t
  L2VuLXVzL2RvdG5ldC9hcnRpY2xlcy9jb3JlL2luZGV4IEZpbmQgYWRkaXRp
  b25hbCAuTkVUIENvcmUgcGFja2FnZXMgJCB5dW0gbGlzdCBhdmFpbGFibGUg
  cmgtZG90bmV0Y29yZTEwXFwqIFZpZXcgdGhlIGZ1bGwgbGlzdCBvZiBwYWNr
  YWdlcyBGb3IgUmVkIEhhdCBFbnRlcnByaXNlIExpbnV4IFNlcnZlciBlZGl0
  aW9uOiAkIHl1bSAtLWRpc2FibGVyZXBvPVwiKlwiIC0tZW5hYmxlcmVwbz1c
  InJoZWwtNy1zZXJ2ZXItZG90bmV0LXJwbXNcIiBsaXN0IGF2YWlsYWJsZSBG
  b3IgUmVkIEhhdCBFbnRlcnByaXNlIExpbnV4IFdvcmtzdGF0aW9uIGVkaXRp
  b246ICQgeXVtIC0tZGlzYWJsZXJlcG89XCIqXCIgLS1lbmFibGVyZXBvPVwi
  cmhlbC03LXdvcmtzdGF0aW9uLWRvdG5ldC1ycG1zXCIgbGlzdCBhdmFpbGFi
  bGUgV2FudCB0byBrbm93IG1vcmUgYWJvdXQgd2hhdCB5b3UgY2FuIGRvIHdp
  dGggRG90TmV0PyBSZWQgSGF0IC5ORVQgQ29yZSAxLjAgRG9jdW1lbnRhdGlv
  biA6IFJlZCBIYXQgLk5FVCBDb3JlIDEuMCBHZXR0aW5nIFN0YXJ0ZWQgR3Vp
  ZGUgUmVkIEhhdCAuTkVUIENvcmUgMS4wIFJlbGVhc2UgTm90ZXMgQmVjb21l
  IGEgUmVkIEhhdCBkZXZlbG9wZXI6IGRldmVsb3BlcnMucmVkaGF0LmNvbSBS
  ZWQgSGF0IGRlbGl2ZXJzIHRoZSByZXNvdXJjZXMgYW5kIGVjb3N5c3RlbSBv
  ZiBleHBlcnRzIHRvIGhlbHAgeW91IGJlIG1vcmUgcHJvZHVjdGl2ZSBhbmQg
  YnVpbGQgZ3JlYXQgc29sdXRpb25zLiBSZWdpc3RlciBmb3IgZnJlZSBhdCBk
  ZXZlbG9wZXJzLnJlZGhhdC5jb20gLiBUcm91Ymxlc2hvb3RpbmcgYW5kIEZB
  USBBcyBhIGRldmVsb3BlciwgaG93IGNhbiBJIGdldCBhIFJlZCBIYXQgRW50
  ZXJwcmlzZSBMaW51eCBzdWJzY3JpcHRpb24gdGhhdCBpbmNsdWRlcyAuTkVU
  IENvcmU/IERldmVsb3BlcnMgY2FuIGdldCBhIG5vLWNvc3QgUmVkIEhhdCBF
  bnRlcnByaXNlIExpbnV4IERldmVsb3BlciBTdWl0ZSBzdWJzY3JpcHRpb24g
  Zm9yIGRldmVsb3BtZW50IHB1cnBvc2VzIGJ5IHJlZ2lzdGVyaW5nIGFuZCBk
  b3dubG9hZGluZyB0aHJvdWdoIGRldmVsb3BlcnMucmVkaGF0LmNvbS4gV2Ug
  cmVjb21tZW5kIHlvdSBmb2xsb3cgb3VyIEdldHRpbmcgU3RhcnRlZCBHdWlk
  ZSAsIHdoaWNoIGNvdmVycyBkb3dubG9hZGluZyBhbmQgaW5zdGFsbGluZyBS
  ZWQgSGF0IEVudGVycHJpc2UgTGludXggb24gYSBwaHlzaWNhbCBzeXN0ZW0g
  b3IgdmlydHVhbCBtYWNoaW5lIChWTSkgdXNpbmcgeW91ciBjaG9pY2Ugb2Yg
  VmlydHVhbEJveCwgVk13YXJlLCBNaWNyb3NvZnQgSHlwZXItViwgb3IgTGlu
  dXggS1ZNL0xpYnZpcnQuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgRnJl
  cXVlbnRseSBhc2tlZCBxdWVzdGlvbnM6IG5vLWNvc3QgUmVkIEhhdCBFbnRl
  cnByaXNlIExpbnV4IERldmVsb3BlciBTdWl0ZSAuIEkgY2Fu4oCZdCBmaW5k
  IHRoZSAuTkVUIENvcmUgcmVwb3NpdG9yeSBvbiBteSBzeXN0ZW0gLiBTb21l
  IFJlZCBIYXQgRW50ZXJwcmlzZSBMaW51eCBzdWJzY3JpcHRpb25zIGRvIG5v
  dCBpbmNsdWRlIGFjY2VzcyB0byAuTkVUIENvcmUuIFRoZSBuYW1lIG9mIHRo
  ZSByZXBvc2l0b3J5IGRlcGVuZHMgb24gd2hldGhlciB5b3UgaGF2ZSBhIFNl
  cnZlciBvciBXb3Jrc3RhdGlvbiB2ZXJzaW9uIG9mIFJlZCBIYXQgRW50ZXJw
  cmlzZSBMaW51eCBpbnN0YWxsZWQuIFlvdSBjYW4gdXNlIHN1YnNjcmlwdGlv
  bi1tYW5hZ2VyIHRvIHZpZXcgdGhlIGF2YWlsYWJsZSBzb2Z0d2FyZSByZXBv
  c2l0b3JpZXMgYW5kIHZlcmlmeSB0aGF0IHlvdSBoYXZlIGFjY2VzcyB0byAu
  TkVUIENvcmUgZm9yIFJlZCBIYXQgRW50ZXJwcmlzZSBMaW51eDogJCBzdSAt
  ICMgc3Vic2NyaXB0aW9uLW1hbmFnZXIgcmVwb3MgLS1saXN0IHwgZWdyZXAg
  ZG90bmV0IENhbiBJIHVzZSAuTkVUIENvcmUgaW4gY29udGFpbmVycz8gWWVz
  LCAuTkVUIENvcmUgaXMgYXZhaWxhYmxlIGFzIGEgZG9ja2VyLWZvcm1hdHRl
  ZCBjb250YWluZXIgaW1hZ2UgZnJvbSB0aGUgUmVkIEhhdCBDb250YWluZXIg
  UmVnaXN0cnkuIEdldCBzdGFydGVkIGd1aWRlcyBmb3IgYnVpbGRpbmcgeW91
  ciBmaXJzdCBjb250YWluZXIgYXJlIGF2YWlsYWJsZSBvbiBkZXZlbG9wZXJz
  LnJlZGhhdC5jb20gLiBJcyB0aGVyZSBhbiBvcGVuLXNvdXJjZSBjb21tdW5p
  dHkgZm9yIC5ORVQgQ29yZT8gSG93IGNhbiBJIGNvbnRyaWJ1dGUgb3IgZ2V0
  IGludm9sdmVkIHdpdGggLk5FVCBDb3JlPyBUaGUgb3BlbiBzb3VyY2UgY29t
  bXVuaXR5IHRoYXQgaXMgdGhlIHVwc3RyZWFtIGZvciAuTkVUIENvcmUgY2Fu
  IGJlIGZvdW5kIGF0IGdpdGh1Yi5jb20vZG90bmV0L2NvcmUgLiBJ4oCZdmUg
  aW5zdGFsbGVkIHJoLWRvdG5ldGNvcmUxMCwgYnV0IGRvdG5ldCBpcyBub3Qg
  aW4gbXkgcGF0aC4gSSBjYW7igJl0IGZpbmQgdGhlIGRvdG5ldCBjb21tYW5k
  LiAkIHNjbCBlbmFibGUgcmgtZG90bmV0Y29yZTEwIGJhc2ggRm9yIG1vcmUg
  aW5mb3JtYXRpb24gc2VlIHRoZSBSZWQgSGF0IFNvZnR3YXJlIENvbGxlY3Rp
  b24gZG9jdW1lbnRhdGlvbiAuIFdoZW4gSSB0cnkgdG8gcnVuIGRvdG5ldCAs
  IEkgZ2V0IGFuIGVycm9yIGFib3V0IGEgbWlzc2luZyBzaGFyZWQgbGlicmFy
  eS4gVGhpcyBpcyBkdWUgdG8gbm90IGhhdmluZyBydW4gc2NsIGVuYWJsZSBm
  aXJzdC4gV2hlbiBzY2wgZW5hYmxlIHJ1bnMsIGluIGFkZGl0aW9uIHRvIHNl
  dHRpbmcgdXAgdGhlIGNvbW1hbmQgc2VhcmNoIFBBVEgsIGl0IGFsc28gc2V0
  cyB1cCB0aGUgc2VhcmNoIHBhdGggZm9yIHNoYXJlZCBsaWJyYXJpZXMsIExE
  X0xJQlJBUllfUEFUSC4gSG93IGRvIEkgdW5pbnN0YWxsIC5ORVQgQ29yZSBh
  bmQgYW55IGRlcGVuZGVuY2llcz8gVW5pbnN0YWxsaW5nIHRoZSByaC1kb3Ru
  ZXRjb3JlMTAtcnVudGltZSBwYWNrYWdlIHdpbGwgY2F1c2UgdGhlIGRlcGVu
  ZGVudCBwYWNrYWdlcyB0aGF0IGFyZSBubyBsb25nZXIgbmVlZGVkIHRvIGJl
  IHJlbW92ZWQuICMgeXVtIHVuaW5zdGFsbCByaC1kb3RuZXRjb3JlMTAtcnVu
  dGltZSBTb21lIC5ORVQvQyMgY29kZS9leGFtcGxlcyBJ4oCZdmUgdHJpZWQg
  ZG9u4oCZdCB3b3JrIHdpdGggLk5FVCBDb3JlLiAuTkVUIENvcmUgMS4wIGlz
  IGEgbmV3IHZlcnNpb24gb2YgdGhlIC5ORVQgZnJhbWV3b3JrIHRoYXQgaXMg
  aW5jb21wYXRpYmxlIHdpdGggdGhlIHByZXZpb3VzIC5ORVQgMi54LCAzLngs
  IGFuZCA0Lnggc2VyaWVzIGZyYW1ld29ya3MuIFRoZXJlIGlzIGEgbGFyZ2Ug
  YW1vdW50IG9mIGNvZGUgd3JpdHRlbiBmb3IgLk5FVCB0aGF0IHdpbGwgbm90
  IHJ1biB3aXRob3V0IG1vZGlmaWNhdGlvbiBvbiAuTkVUIENvcmUuIEJ1aWxk
  IFNvbWV0aGluZyBUb2RheSBMZXQncyB3YWxrIHRocm91Z2ggZXZlcnl0aGlu
  ZyB5b3UgbmVlZCB0byBidWlsZCB5b3VyIGZpcnN0IGFwcGxpY2F0aW9uLiBE
  b3dubG9hZCBHZXQgU3RhcnRlZCBCdXkgSXQgQ29udGFjdCBTYWxlcyJdLCJz
  eXNfdHlwZSI6WyJ3ZWJwYWdlIl0sInN5c190aXRsZSI6WyJEb3ROZXQgLSBH
  ZXQgU3RhcnRlZCB8IFJlZCBIYXQgRGV2ZWxvcGVycyJdfSwiaGlnaGxpZ2h0
  Ijp7InN5c19jb250ZW50X3BsYWludGV4dCI6WyJyZXBvc2l0b3J5LiBJbnN0
  cnVjdGlvbnMgYXJlIHByb3ZpZGVkIGZvciBib3RoIHRoZSA8c3BhbiBjbGFz
  cz0naGx0Jz5jb21tYW5kPC9zcGFuPiBsaW5lIGludGVyZmFjZSAoQ0xJKSBh
  bmQgdGhlIGdyYXBoaWNhbCB1c2VyIGludGVyZmFjZSIsIm1lbnUuIEFsdGVy
  bmF0aXZlbHksIHlvdSBjYW4gc3RhcnQgaXQgZnJvbSB0aGUgPHNwYW4gY2xh
  c3M9J2hsdCc+Y29tbWFuZDwvc3Bhbj4gcHJvbXB0IGJ5IHR5cGluZyBzdWJz
  Y3JpcHRpb24tbWFuYWdlci1ndWkgLiBTZWxlY3QiLCJyZXBvc2l0b3JpZXMs
  IGNoZWNrIHRoZSBFbmFibGVkIGNvbHVtbiBmb3IgcmhlbC03LXNlcnZlci08
  c3BhbiBjbGFzcz0naGx0Jz5kb3RuZXQ8L3NwYW4+LXJwbXMgLiBJZiB5b3Ug
  YXJlIHVzaW5nIGEgV29ya3N0YXRpb24gdmVyc2lvbiBvZiIsInRoZSByZXBv
  c2l0b3J5IHdpbGwgYmUgbmFtZWQgcmhlbC03LXdvcmtzdGF0aW9uLTxzcGFu
  IGNsYXNzPSdobHQnPmRvdG5ldDwvc3Bhbj4tcnBtcyAuIE5vdGU6IEFmdGVy
  IGNsaWNraW5nLCBpdCBtaWdodCB0YWtlIHNldmVyYWwiLCJzdWJzY3JpcHRp
  b24tbWFuYWdlciBmcm9tIHRoZSA8c3BhbiBjbGFzcz0naGx0Jz5jb21tYW5k
  PC9zcGFuPiBsaW5lIFlvdSBjYW4gYWRkIG9yIHJlbW92ZSBzb2Z0d2FyZSBy
  ZXBvc2l0b3JpZXMgZnJvbSB0aGUgPHNwYW4gY2xhc3M9J2hsdCc+Y29tbWFu
  ZDwvc3Bhbj4gbGluZSB1c2luZyB0aGUiXSwic3lzX2Rlc2NyaXB0aW9uIjpb
  IkxlYXJuIGhvdyB0byBpbnN0YWxsIGFuZCBzdGFydCB1c2luZyA8c3BhbiBj
  bGFzcz0naGx0Jz5Eb3ROZXQ8L3NwYW4+LiJdLCJzeXNfdGl0bGUiOlsiPHNw
  YW4gY2xhc3M9J2hsdCc+RG90TmV0PC9zcGFuPiAtIEdldCBTdGFydGVkIHwg
  UmVkIEhhdCBEZXZlbG9wZXJzIl19fSx7Il9pbmRleCI6ImRhdGFfcmh0X3dl
  YnNpdGUiLCJfdHlwZSI6InJodF93ZWJzaXRlIiwiX2lkIjoicmh0X3dlYnNp
  dGUtaHR0cHNfZGV2ZWxvcGVyc19yZWRoYXRfY29tX25vZGVfMjMwNSIsIl9z
  Y29yZSI6MC40MTcxMTQyNiwiZmllbGRzIjp7InN5c19kZXNjcmlwdGlvbiI6
  WyJGaW5kIGRvY3VtZW50YXRpb24sIHZpZGVvcywgYXJ0aWNsZXMsIGFuZCBv
  dGhlciByZXNvdXJjZXMgYXZhaWxhYmxlIGZvciBEb3ROZXQuIl0sInN5c191
  cmxfdmlldyI6WyJodHRwczovL2RldmVsb3BlcnMucmVkaGF0LmNvbS9ub2Rl
  LzIzMDUiXSwic3lzX2NvbnRlbnRfcGxhaW50ZXh0IjpbIi5ORVQgUnVudGlt
  ZSBmb3IgUmVkIEhhdCBMaW51eCBCdWlsZCBhbmQgcnVuIGNyb3NzLXBsYXRm
  b3JtIC5ORVQgYXBwbGljYXRpb25zIG9uIHRoZSB3b3JsZCdzIG51bWJlciBv
  bmUgZW50ZXJwcmlzZS1yZWFkeSBMaW51eCBkaXN0cmlidXRpb24sIFJlZCBI
  YXQgRW50ZXJwcmlzZSBMaW51eC4gLk5FVCBSdW50aW1lIGZvciBSZWQgSGF0
  IExpbnV4IEhlbGxvIFdvcmxkISBCdWlsZCBTb21ldGhpbmcgVG9kYXkgTGV0
  J3Mgd2FsayB0aHJvdWdoIGV2ZXJ5dGhpbmcgeW91IG5lZWQgdG8gYnVpbGQg
  eW91ciBmaXJzdCBhcHBsaWNhdGlvbi4gR2V0IFN0YXJ0ZWQgQnV5IEl0IENv
  bnRhY3QgU2FsZXMgTW9yZSBPdmVydmlldyBHZXQgU3RhcnRlZCBEb2NzIGFu
  ZCBBUElzIEhlbHAgRG9jcyBhbmQgQVBJcyBDaGVjayBvdXQgdGhlIFJlZCBI
  YXQgRGV2ZWxvcGVycyAuTkVUIFRvcGljcyBQYWdlIGZvciBtb3JlIHJlY2Vu
  dCBhcnRpY2xlcyBhbmQgaW5mb3JtYXRpb24gcmVsYXRlZCB0byAuTkVUIG9u
  IExpbnV4IEJ1aWxkIFNvbWV0aGluZyBUb2RheSBMZXQncyB3YWxrIHRocm91
  Z2ggZXZlcnl0aGluZyB5b3UgbmVlZCB0byBidWlsZCB5b3VyIGZpcnN0IGFw
  cGxpY2F0aW9uLiBEb3dubG9hZCBHZXQgU3RhcnRlZCBCdXkgSXQgQ29udGFj
  dCBTYWxlcyJdLCJzeXNfdHlwZSI6WyJ3ZWJwYWdlIl0sInN5c190aXRsZSI6
  WyJEb3ROZXQgLSBEb2NzIGFuZCBBUElzIHwgUmVkIEhhdCBEZXZlbG9wZXJz
  Il19LCJoaWdobGlnaHQiOnsic3lzX2Rlc2NyaXB0aW9uIjpbInZpZGVvcywg
  YXJ0aWNsZXMsIGFuZCBvdGhlciByZXNvdXJjZXMgYXZhaWxhYmxlIGZvciA8
  c3BhbiBjbGFzcz0naGx0Jz5Eb3ROZXQ8L3NwYW4+LiJdLCJzeXNfdGl0bGUi
  OlsiPHNwYW4gY2xhc3M9J2hsdCc+RG90TmV0PC9zcGFuPiAtIERvY3MgYW5k
  IEFQSXMgfCBSZWQgSGF0IERldmVsb3BlcnMiXX19LHsiX2luZGV4IjoiZGF0
  YV9yaHRfa25vd2xlZGdlYmFzZV9zb2x1dGlvbiIsIl90eXBlIjoicmh0X2tu
  b3dsZWRnZWJhc2Vfc29sdXRpb24iLCJfaWQiOiJyaHRfa25vd2xlZGdlYmFz
  ZV9zb2x1dGlvbi0xNDQ1NjkzIiwiX3Njb3JlIjowLjM1NDk3MTMsImZpZWxk
  cyI6eyJzeXNfZGVzY3JpcHRpb24iOlsiLSBBZnRlciBzdGFydCBhIEZVU0Ug
  c2VydmVyLCBsaWtlIGEgc2VydmljZSBpbiBhIFJIRUwgNywgd2UgY2FuIHNl
  ZSBtZXNzYWdlcyBvZiBKYXZhIFBlckdFTSBzcGFjZSBlcnJvci4gV2Ugd2Vy
  ZSBhYmxlIHRvIGNvbmZpZ3VyZSB0aGUgTUFYIGFuZCBNSU4gc2V0dGluZ3Mg
  aW4gSmF2YSBIRUFQIHNwYWNlIG1lbW9yeSBmb3IgS0FSQUYsIGJ1dCBkb250
  IGZpbmQgaG93IHRvIHNldCBhIFBFUk0gc3BhY2UgbWVtb3J5IGZvciBLYXJh
  ZiBvciBKZXR0eSBzZXJ2ZXIuIEluIGxvZ3MgZG9udCBzZWUgYW55IG1lc3Nh
  Z2VzIG9mIGVycm9yLCBvbmx5IGluIHRoZSBjb21tYW5kIGxpbmUgYWZ0ZXIg
  c3RhcnQgYCZxdW90Oy4vYmluL2NsaWVudCZxdW90O2AuLSBIb3cgdG8gc2V0
  IHRoZSBQZXJtU2l6ZSB3aGlsZSBydW5uaW5nIEZ1c2UgYXMgYSB3cmFwcGVy
  IHNlcnZpY2UuIl0sInN5c19jcmVhdGVkIjpbIjIwMTUtMDUtMTJUMDU6NDQ6
  NTkuMDAwWiJdLCJzeXNfdXJsX3ZpZXciOlsiaHR0cHM6Ly9hY2Nlc3Muc3Rh
  Z2UucmVkaGF0LmNvbS9zb2x1dGlvbnMvMTQ0NTY5MyJdLCJzeXNfdHlwZSI6
  WyJzb2x1dGlvbiJdLCJzeXNfdGFncyI6WyJmdXNlIiwianZtIiwidHVuaW5n
  Il0sInN5c190aXRsZSI6WyJIb3cgdG8gc2V0IHRoZSBQZXJtR2VtIHNwYWNl
  IHNpemUgaW4gRlVTRSA2IHdoaWxlIHJ1bm5pbmcgaXQgYXMgYSB3cmFwcGVy
  IHNlcnZpY2UgPyJdfSwiaGlnaGxpZ2h0Ijp7InN5c19kZXNjcmlwdGlvbiI6
  WyJzZXJ2aWNlIGluIGEgUkhFTCA3LCB3ZSBjYW4gc2VlIG1lc3NhZ2VzIG9m
  IEphdmEgUGVyPHNwYW4gY2xhc3M9J2hsdCc+R0VNPC9zcGFuPiBzcGFjZSBl
  cnJvci4gV2Ugd2VyZSBhYmxlIHRvIGNvbmZpZ3VyZSB0aGUgTUFYIGFuZCIs
  ImxvZ3MgZG9udCBzZWUgYW55IG1lc3NhZ2VzIG9mIGVycm9yLCBvbmx5IGlu
  IHRoZSA8c3BhbiBjbGFzcz0naGx0Jz5jb21tYW5kPC9zcGFuPiBsaW5lIGFm
  dGVyIHN0YXJ0IGAmcXVvdDsuL2Jpbi9jbGllbnQmcXVvdDtgLi0gSG93Il0s
  InN5c190aXRsZSI6WyJIb3cgdG8gc2V0IHRoZSBQZXJtPHNwYW4gY2xhc3M9
  J2hsdCc+R2VtPC9zcGFuPiBzcGFjZSBzaXplIGluIEZVU0UgNiB3aGlsZSBy
  dW5uaW5nIGl0IGFzIGEgd3JhcHBlciBzZXJ2aWNlID8iXX19LHsiX2luZGV4
  IjoiZGF0YV9qYm9zc29yZ19zYnNfZm9ydW0iLCJfdHlwZSI6Impib3Nzb3Jn
  X3Nic19mb3J1bSIsIl9pZCI6Impib3Nzb3JnX3Nic19mb3J1bS0yNjE3MDAi
  LCJfc2NvcmUiOjAuMzE2MDQ4NDQsImZpZWxkcyI6eyJzeXNfdXJsX3ZpZXci
  OlsiaHR0cHM6Ly9kZXZlbG9wZXIuc3RhZ2UuamJvc3Mub3JnL3RocmVhZC8y
  NjE3MDAiXSwic3lzX2NvbnRlbnRfcGxhaW50ZXh0IjpbIkknbSB0cnlpbmcg
  dG8gcnVuIGEgR2VuZXJpY0NvbW1hbmQgZnJvbSBhIHJlbW90ZSBzZXNzaW9u
  IHZpYSBKTVMgYW5kIGdldCB0aGUgZm9sbG93aW5nIGVycm9yOiBTZXJ2bGV0
  LnNlcnZpY2UgKCkgZm9yIHNlcnZsZXQgamF2YXgud3MucnMuY29yZS5BcHBs
  aWNhdGlvbiBUaHJldyBleGNlcHRpb246IG9yZy5qYm9zcy5yZXN0ZWFzeS5z
  cGkuVW5oYW5kbGVkRXhjZXB0aW9uOiBqYXZhLmxhbmcuVW5zdXBwb3J0ZWRP
  cGVyYXRpb25FeGNlcHRpb246IGNsLmJlZS5td2kuamJwbS5Xb3JrZmxvd0pi
  cG1JbXBsICQgMSBpcyBub3QgYW4gYWNjZXB0ZWQgY29tbWFuZCAuIFRoZSBj
  b2RlOiBSZW1vdGVSdW50aW1lRW5naW5lIHJ0ZSA9IG5ldyBSZW1vdGVKbXNS
  dW50aW1lRW5naW5lRmFjdG9yeShjb25maWcpLm5ld1J1bnRpbWVFbmdpbmUo
  KTsgcnRlLmdldEtpZVNlc3Npb24oKS5leGVjdXRlKG5ldyBHZW5lcmljQ29t
  bWFuZDxNYXA8U3RyaW5nLCBPYmplY3Q+PigpIHsgQFN1cHByZXNzV2Fybmlu
  Z3MoXCJ1bmNoZWNrZWRcIikgcHVibGljIE1hcDxTdHJpbmcsIE9iamVjdD4g
  ZXhlY3V0ZShDb250ZXh0IGNvbnRleHQpIHsgdHJ5IHsgS2llU2Vzc2lvbiBr
  c2Vzc2lvbiA9ICgoS25vd2xlZGdlQ29tbWFuZENvbnRleHQpIGNvbnRleHQp
  LmdldEtpZVNlc3Npb24oKTsgb3JnLmpicG0ucHJvY2Vzcy5pbnN0YW5jZS5Q
  cm9jZXNzSW5zdGFuY2UgcHJvY2Vzc0luc3RhbmNlID0gZy5qYnBtLnByb2Nl
  c3MuaW5zdGFuY2UuUHJvY2Vzc0luc3RhbmNlKSBrc2Vzc2lvbi5nZXRQcm9j
  ZXNzSW5zdGFuY2UoKGdldFRhc2tPYmplY3RCeUlkKHRhc2tJZCkuZ2V0VGFz
  a0RhdGEoKS5nZXRQcm9jZXNzSW5zdGFuY2VJZCgpKSk7IFZhcmlhYmxlU2Nv
  cGVJbnN0YW5jZSB2YXJpYWJsZVNjb3BlID0gKFZhcmlhYmxlU2NvcGVJbnN0
  YW5jZSkgcHJvY2Vzc0luc3RhbmNlLmdldENvbnRleHRJbnN0YW5jZShWYXJp
  YWJsZVNjb3BlLlZBUklBQkxFX1NDT1BFKTsgdmFyaWFibGVTY29wZS5nZXRW
  YXJpYWJsZXMoKS5wdXRBbGwoKEhhc2hNYXA8U3RyaW5nLCBPYmplY3Q+KSBw
  YXJhbWV0ZXJzLmdldChcInZhcmlhYmxlc1wiKSk7IH0gY2F0Y2ggKEV4Y2Vw
  dGlvbiBlKSB7IGUucHJpbnRTdGFja1RyYWNlKCk7IH0gcmV0dXJuIG5ldyBI
  YXNoTWFwPFN0cmluZywgT2JqZWN0PigpOyB9IH0pOyBTb21lb25lIGNhbiBo
  ZWxwIG1lLCBmcm9tIGEgcmVtb3RlIHNlc3Npb24gdmlhIEpUQSB3b3JrcyB3
  b25kZXJzLiBSZWdhcmRzIl0sInN5c19kZXNjcmlwdGlvbiI6WyJJJ20gdHJ5
  aW5nIHRvIHJ1biBhIEdlbmVyaWNDb21tYW5kIGZyb20gYSByZW1vdGUgc2Vz
  c2lvbiB2aWEgSk1TIGFuZCBnZXQgdGhlIGZvbGxvd2luZyBlcnJvcjogU2Vy
  dmxldC5zZXJ2aWNlICgpIGZvciBzZXJ2bGV0IGphdmF4LndzLnJzLmNvcmUu
  QXBwbGljYXRpb24gVGhyZXcgZXhjZXB0aW9uOiBvcmcuamJvc3MucmVzdGVh
  c3kuc3BpLlVuaGFuZGxlZEV4Y2VwdGlvbjogamF2YS5sYW5nLlVuc3VwcG9y
  dGVkT3BlcmF0aW9uRXhjZXB0aW9uOiBjbC5iZWUubXdpLmpicG0uV29ya2Zs
  b3dKYnBtSW1wbCAkIDEgaXMgbm90IGFuIGFjY2VwdGVkIGNvbW1hbmQgLiBU
  aGUgY29kZTogUmVtb3RlUnVudGltZUVuZ2luZSBydGUgPSBuZXcgUmVtb3Rl
  Sm1zUnVudGltZUVuZ2luZUZhY3RvcnkoY29uZmlnLi4uIl0sInN5c19jcmVh
  dGVkIjpbIjIwMTUtMDgtMDNUMTY6MjQ6MzcuODkzWiJdLCJzeXNfY29udHJp
  YnV0b3JzIjpbIkZyYW5jaXNjbyBHb256YWxleiBBbHZhcmV6IDxyZXRzdWNo
  YW5AZ21haWwuY29tPiJdLCJzeXNfdHlwZSI6WyJmb3J1bXRocmVhZCJdLCJz
  eXNfdGFncyI6WyJjb21tYW5kcyIsImpicG0gNi4yIl0sInN5c190aXRsZSI6
  WyJHZW5lcmljQ29tbWFuZC4uaXMgbm90IGFuIGFjY2VwdGVkIGNvbW1hbmQh
  Il19LCJoaWdobGlnaHQiOnsic3lzX2NvbnRlbnRfcGxhaW50ZXh0IjpbIkkn
  bSB0cnlpbmcgdG8gcnVuIGEgR2VuZXJpYzxzcGFuIGNsYXNzPSdobHQnPkNv
  bW1hbmQ8L3NwYW4+IGZyb20gYSByZW1vdGUgc2Vzc2lvbiB2aWEgSk1TIGFu
  ZCBnZXQgdGhlIGZvbGxvd2luZyBlcnJvcjogU2VydmxldCIsIm13aS5qYnBt
  LldvcmtmbG93SmJwbUltcGwgJCAxIGlzIG5vdCBhbiBhY2NlcHRlZCA8c3Bh
  biBjbGFzcz0naGx0Jz5jb21tYW5kPC9zcGFuPiAuIFRoZSBjb2RlOiBSZW1v
  dGVSdW50aW1lRW5naW5lIHJ0ZSA9IG5ldyBSZW1vIiwibmV3UnVudGltZUVu
  Z2luZSgpOyBydGUuZ2V0S2llU2Vzc2lvbigpLmV4ZWN1dGUobmV3IEdlbmVy
  aWM8c3BhbiBjbGFzcz0naGx0Jz5Db21tYW5kPC9zcGFuPjxNYXA8U3RyaW5n
  LCBPYmplY3Q+PigpIHsgQFN1cHByZXNzV2FybmluZ3MoXCJ1bmNoZWNrZWRc
  IikiLCJjb250ZXh0KSB7IHRyeSB7IEtpZVNlc3Npb24ga3Nlc3Npb24gPSAo
  KEtub3dsZWRnZTxzcGFuIGNsYXNzPSdobHQnPkNvbW1hbmQ8L3NwYW4+Q29u
  dGV4dCkgY29udGV4dCkuZ2V0S2llU2Vzc2lvbigpOyBvcmcuamJwbS5wcm9j
  ZXNzIl0sInN5c19kZXNjcmlwdGlvbiI6WyJJJ20gdHJ5aW5nIHRvIHJ1biBh
  IEdlbmVyaWM8c3BhbiBjbGFzcz0naGx0Jz5Db21tYW5kPC9zcGFuPiBmcm9t
  IGEgcmVtb3RlIHNlc3Npb24gdmlhIEpNUyBhbmQgZ2V0IHRoZSBmb2xsb3dp
  bmcgZXJyb3I6IFNlcnZsZXQiLCJtd2kuamJwbS5Xb3JrZmxvd0picG1JbXBs
  ICQgMSBpcyBub3QgYW4gYWNjZXB0ZWQgPHNwYW4gY2xhc3M9J2hsdCc+Y29t
  bWFuZDwvc3Bhbj4gLiBUaGUgY29kZTogUmVtb3RlUnVudGltZUVuZ2luZSBy
  dGUgPSBuZXcgUmVtbyJdLCJzeXNfdGl0bGUiOlsiR2VuZXJpYzxzcGFuIGNs
  YXNzPSdobHQnPkNvbW1hbmQ8L3NwYW4+Li5pcyBub3QgYW4gYWNjZXB0ZWQg
  PHNwYW4gY2xhc3M9J2hsdCc+Y29tbWFuZDwvc3Bhbj4hIl19fSx7Il9pbmRl
  eCI6ImRhdGFfamJvc3NvcmdfYmxvZyIsIl90eXBlIjoiamJvc3NvcmdfYmxv
  Z3Bvc3QiLCJfaWQiOiJqYm9zc29yZ19ibG9nLWluc3RhbGxfdG9ycXVlYm94
  XzJfeF9hc19hX2dlbTAiLCJfc2NvcmUiOjAuMjkwNDAyLCJmaWVsZHMiOnsi
  c3lzX2NyZWF0ZWQiOlsiMjAxMS0wNi0xMFQxNjo0NTowMC4wMDBaIl0sInN5
  c19kZXNjcmlwdGlvbiI6WyJXZSB0cmllZCB0byBtYWtlIFRvcnF1ZUJveCAx
  LnggYXMgZWFzeSB0byBpbnN0YWxsIGFzIHBvc3NpYmxlIGJ1dCBpdCBzdGls
  bCBpbnZvbHZlZCBkb3dubG9hZGluZyBhbmQgdW56aXBwaW5nIGFuIGFyY2hp
  dmUgYW5kIHNldHRpbmcgc29tZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIElm
  IHlvdSB3YW50ZWQgdG8gdXNlIFRvcnF1ZUJveCAxLnggd2l0aCBSVk0gb3Ig
  YW4gZXhpc3RpbmcgSlJ1YnkgaW5zdGFsbGF0aW9uLCBpdCByZXF1aXJlZCBl
  dmVuIG1vcmUgc3RlcHMuIERvbid0IHlvdSB0aGluayBpdCB3b3VsZCBiZSBz
  byBtdWNoIGVhc2llciBpZiB0aGVyZSB3YXMgb25lIGdlbSBpbnN0YWxsIGNv
  bW1hbmQgdG8gaW5zdGFsbCBldmVyeXRoaW5nPyBXZSB0aG91Z2h0IHNvLCB0
  b28hIGdlbSBpbnN0Li4uIl0sInN5c191cmxfdmlldyI6WyJodHRwOi8vdG9y
  cXVlYm94Lm9yZy9uZXdzLzIwMTEvMDYvMTAvdG9ycXVlYm94LWdlbS8iXSwi
  c3lzX3R5cGUiOlsiYmxvZ3Bvc3QiXSwic3lzX3RhZ3MiOlsiZmVlZF9ncm91
  cF9uYW1lX3RvcnF1ZWJveCIsImZlZWRfbmFtZV90b3JxdWVib3giXSwic3lz
  X3RpdGxlIjpbIkluc3RhbGwgVG9ycXVlQm94IDIueCBhcyBhIEdlbSJdfSwi
  aGlnaGxpZ2h0Ijp7InN5c19kZXNjcmlwdGlvbiI6WyJpZiB0aGVyZSB3YXMg
  b25lIDxzcGFuIGNsYXNzPSdobHQnPmdlbTwvc3Bhbj4gaW5zdGFsbCA8c3Bh
  biBjbGFzcz0naGx0Jz5jb21tYW5kPC9zcGFuPiB0byBpbnN0YWxsIGV2ZXJ5
  dGhpbmc/IFdlIHRob3VnaHQgc28sIHRvbyEgPHNwYW4gY2xhc3M9J2hsdCc+
  Z2VtPC9zcGFuPiBpbnN0Li4uIl0sInN5c190aXRsZSI6WyJJbnN0YWxsIFRv
  cnF1ZUJveCAyLnggYXMgYSA8c3BhbiBjbGFzcz0naGx0Jz5HZW08L3NwYW4+
  Il19fSx7Il9pbmRleCI6ImRhdGFfamJvc3NvcmdfYmxvZyIsIl90eXBlIjoi
  amJvc3NvcmdfYmxvZ3Bvc3QiLCJfaWQiOiJqYm9zc29yZ19ibG9nLXRvcnF1
  ZWJveF9nZW1fY2hhbmdlcyIsIl9zY29yZSI6MC4yODExNjU0OCwiZmllbGRz
  Ijp7InN5c191cmxfdmlldyI6WyJodHRwOi8vdG9ycXVlYm94Lm9yZy9uZXdz
  LzIwMTEvMDMvMDEvdG9ycXVlYm94LWdlbS1jaGFuZ2VzLyJdLCJzeXNfY3Jl
  YXRlZCI6WyIyMDExLTAzLTAxVDAwOjAwOjAwLjAwMFoiXSwic3lzX2Rlc2Ny
  aXB0aW9uIjpbIlBhcnR5IG9mIHRoZSBmaXJzdCBwYXJ0IE92ZXIgdGhlIHBh
  c3QgZmV3IGRheXMsIHdlJ3ZlIHdvcmtlZCB0byBtYWtlIHRoZSBiaXRzIG9m
  IFRvcnF1ZUJveCB0aGF0IGFyZSBwYWNrYWdlZCB1cCBhbmQgZXhwb3NlZCBh
  cyBSdWJ5R2VtcyBhIGxpdHRsZSBsZXNzIGNyYXp5dG93bi4gSWYgeW91IHJl
  Y2FsbCwgeW91J3ZlIGJlZW4gaW4gdGhlIGhhYml0IG9mIGRvaW5nIHN0dWZm
  IGxpa2U6IHJlcXVpcmUgJ29yZy50b3JxdWVib3gudG9ycXVlYm94LW1lc3Nh
  Z2luZy1jbGllbnQnXG4gT3IgbW9yZSByZWNlbnRseS4uLiByZXF1aXJlICdv
  cmcudG9ycXVlYm94Lm1lc3NhZ2luZy1jbGllbnQnXG4gVGhlIG9yZy50b3Jx
  dWVib3ggcHJlZml4IGhhcyBiZWVuIGxlYWtpbmcgaW4gZnJvbSB0aGUgZmFj
  dCB3ZSBidS4uLiJdLCJzeXNfY29udHJpYnV0b3JzIjpbIkJvYiBNY1doaXJ0
  ZXIgPGJtY3doaXJ0QHJlZGhhdC5jb20+Il0sInN5c190eXBlIjpbImJsb2dw
  b3N0Il0sInN5c190YWdzIjpbImZlZWRfZ3JvdXBfbmFtZV90b3JxdWVib3gi
  LCJmZWVkX25hbWVfdG9ycXVlYm94Il0sInN5c190aXRsZSI6WyJUb3JxdWVC
  b3ggR2VtIENoYW5nZXMiXX0sImhpZ2hsaWdodCI6eyJzeXNfZGVzY3JpcHRp
  b24iOlsiUGFydHkgb2YgdGhlIGZpcnN0IHBhcnQgT3ZlciB0aGUgcGFzdCA8
  c3BhbiBjbGFzcz0naGx0Jz5mZXc8L3NwYW4+IGRheXMsIHdlJ3ZlIHdvcmtl
  ZCB0byBtYWtlIHRoZSBiaXRzIG9mIFRvcnF1ZUJveCB0aGF0IGFyZSBwYWNr
  YWdlZCIsInBhY2thZ2VkIHVwIGFuZCBleHBvc2VkIGFzIFJ1Ynk8c3BhbiBj
  bGFzcz0naGx0Jz5HZW1zPC9zcGFuPiBhIGxpdHRsZSBsZXNzIGNyYXp5dG93
  bi4gSWYgeW91IHJlY2FsbCwgeW91J3ZlIGJlZW4gaW4gdGhlIGhhYml0Il0s
  InN5c190aXRsZSI6WyJUb3JxdWVCb3ggPHNwYW4gY2xhc3M9J2hsdCc+R2Vt
  PC9zcGFuPiBDaGFuZ2VzIl19fSx7Il9pbmRleCI6ImRhdGFfcmh0X3dlYnNp
  dGUiLCJfdHlwZSI6InJodF93ZWJzaXRlIiwiX2lkIjoicmh0X3dlYnNpdGUt
  aHR0cHNfZGV2ZWxvcGVyc19yZWRoYXRfY29tX3ZpZGVvX3lvdXR1YmVfWi13
  VllzRTZvakEiLCJfc2NvcmUiOjAuMjc0NTcyNjcsImZpZWxkcyI6eyJzeXNf
  ZGVzY3JpcHRpb24iOlsiVGhlcmUgYXJlIHBsZW50eSBvZiBwZXJmb3JtYW5j
  ZSB0b29scyBhbmQgdGVjaG5pcXVlcyBhdmFpbGFibGUgb24gTGludXgsIGJ1
  dCBmZXcgZGVzY3JpcHRpb25zIG9uIGhvdyB0byB1c2UgdGhlbSB0byBjb2xs
  ZWN0IHNwZWNpZmljIHBlcmZvcm1hbmNlIGluZm9ybSJdLCJzeXNfdXJsX3Zp
  ZXciOlsiaHR0cHM6Ly9kZXZlbG9wZXJzLnJlZGhhdC5jb20vdmlkZW8veW91
  dHViZS9aLXdWWXNFNm9qQSJdLCJzeXNfY29udGVudF9wbGFpbnRleHQiOlsi
  RGV2TmF0aW9uIDIwMTQgLSBXaWxsIENvaGVuIC0gUmVjaXBlcyB0byBBbmFs
  eXplIENvbW1vbiBQZXJmb3JtYW5jZSBJc3N1ZXMgMiBWaWV3cywgTWF5IDA2
  IDIwMTQgU2hhcmUgVGhpcyBUd2VldCBTaGFyZSBvbiBGYWNlYm9vayBTaGFy
  ZSBvbiBMaW5rZWRJbiBTaGFyZSBvbiBHb29nbGUrIFRoZXJlIGFyZSBwbGVu
  dHkgb2YgcGVyZm9ybWFuY2UgdG9vbHMgYW5kIHRlY2huaXF1ZXMgYXZhaWxh
  YmxlIG9uIExpbnV4LCBidXQgZmV3IGRlc2NyaXB0aW9ucyBvbiBob3cgdG8g
  dXNlIHRoZW0gdG8gY29sbGVjdCBzcGVjaWZpYyBwZXJmb3JtYW5jZSBpbmZv
  cm1hdGlvbi4gVGhpcyBjYW4gbGVhZCB0byBmcnVzdHJhdGlvbiBhcyB5b3Ug
  dHJ5IHRvIGZpbmQgdG9vbHMgYW5kIGNvbW1hbmQtbGluZSBvcHRpb25zIHRv
  IGNvbGxlY3QgdGhlIGRlc2lyZWQgcGVyZm9ybWFuY2UtbW9uaXRvcmluZyBk
  YXRhLiBJbiB0aGlzIHRhbGssIHlvdSdsbCBsZWFybiByZWNpcGVzIChzZXRz
  IG9mIHN0ZXBzKSB0byBjb2xsZWN0IGRlc2lyZWQgcGVyZm9ybWFuY2UgaW5m
  b3JtYXRpb24gdG8gZGlhZ25vc2UgY29tbW9uIHBlcmZvcm1hbmNlIGlzc3Vl
  cy4gVGhlIHJlY2lwZXMgcHJvdmlkZSBhIHN0YXJ0aW5nIHBvaW50IGZvciBw
  ZXJmb3JtYW5jZSBhbmFseXNpcyBhbmQgY2FuIGJlIGFkanVzdGVkIHRvIHN1
  aXQgbG9jYWwgbmVlZHMuIEV4YW1wbGUgcmVjaXBlcyBpbmNsdWRlOiAqIERl
  dGVybWluZSB3aGF0IGNvZGUgaXMgY29uc3VtaW5nIHByb2Nlc3NvciB0aW1l
  LiAqIERldGVybWluZSB3aGVyZSBpbnRlcnByZXRlZCBjb2RlIChKYXZhLCBQ
  eXRob24sIGFuZCBSdWJ5KSBjb25zdW1lcyBwcm9jZXNzb3IgdGltZS4gKiBE
  ZXRlcm1pbmUgd2hhdCBjb2RlIGlzIGNvbnN1bWluZyBtZW1vcnkuICogRGV0
  ZXJtaW5lIHdoZXRoZXIgYW4gYXBwbGljYXRpb24gaXMgdXNpbmcgcHJvY2Vz
  c29yIGNhY2hlIG1lbW9yeSBlZmZlY3RpdmVseS4gKiBEZXRlcm1pbmUgd2hp
  Y2ggYXBwbGljYXRpb25zIGFyZSBwcm9kdWNpbmcgbmV0d29yayB0cmFmZmlj
  LiBNZWFzdXJlIHRoZSBsYXRlbmN5IG9mIGRpc2sgYW5kIG5ldHdvcmsgb3Bl
  cmF0aW9ucy4gVGFnczogRGV2TmF0aW9uIFBlcmZvcm1hbmNlIFNwZWFrZXJz
  OiBEZXZOYXRpb24iXSwic3lzX3R5cGUiOlsid2VicGFnZSJdLCJzeXNfdGl0
  bGUiOlsiV2F0Y2ggRGV2TmF0aW9uIDIwMTQgLSBXaWxsIENvaGVuIC0gUmVj
  aXBlcyB0byBBbmFseXplIENvbW1vbiBQZXJmb3JtYW5jZSBJc3N1ZXMgYnkg
  RGV2TmF0aW9uIHwgUmVkIEhhdCBEZXZlbG9wZXJzIl19LCJoaWdobGlnaHQi
  Onsic3lzX2NvbnRlbnRfcGxhaW50ZXh0IjpbInBlcmZvcm1hbmNlIHRvb2xz
  IGFuZCB0ZWNobmlxdWVzIGF2YWlsYWJsZSBvbiBMaW51eCwgYnV0IDxzcGFu
  IGNsYXNzPSdobHQnPmZldzwvc3Bhbj4gZGVzY3JpcHRpb25zIG9uIGhvdyB0
  byB1c2UgdGhlbSB0byBjb2xsZWN0IHNwZWNpZmljIiwibGVhZCB0byBmcnVz
  dHJhdGlvbiBhcyB5b3UgdHJ5IHRvIGZpbmQgdG9vbHMgYW5kIDxzcGFuIGNs
  YXNzPSdobHQnPmNvbW1hbmQ8L3NwYW4+LWxpbmUgb3B0aW9ucyB0byBjb2xs
  ZWN0IHRoZSBkZXNpcmVkIHBlcmZvcm1hbmNlLW1vbml0b3JpbmciXSwic3lz
  X2Rlc2NyaXB0aW9uIjpbInBlcmZvcm1hbmNlIHRvb2xzIGFuZCB0ZWNobmlx
  dWVzIGF2YWlsYWJsZSBvbiBMaW51eCwgYnV0IDxzcGFuIGNsYXNzPSdobHQn
  PmZldzwvc3Bhbj4gZGVzY3JpcHRpb25zIG9uIGhvdyB0byB1c2UgdGhlbSB0
  byBjb2xsZWN0IHNwZWNpZmljIl19fSx7Il9pbmRleCI6ImRhdGFfcmh0X3dl
  YnNpdGUiLCJfdHlwZSI6InJodF93ZWJzaXRlIiwiX2lkIjoicmh0X3dlYnNp
  dGUtaHR0cHNfZGV2ZWxvcGVyc19yZWRoYXRfY29tX3ZpZGVvX3lvdXR1YmVf
  azVmZmg0cFozUEEiLCJfc2NvcmUiOjAuMjczMzU5NiwiZmllbGRzIjp7InN5
  c19kZXNjcmlwdGlvbiI6WyJPcGVuU2hpZnQgQ29tbXVuaXR5IEhhbmdvdXQg
  d2l0aCBAdWh1cnVzb2Z0d2FyZSJdLCJzeXNfdXJsX3ZpZXciOlsiaHR0cHM6
  Ly9kZXZlbG9wZXJzLnJlZGhhdC5jb20vdmlkZW8veW91dHViZS9rNWZmaDRw
  WjNQQSJdLCJzeXNfY29udGVudF9wbGFpbnRleHQiOlsiT3BlblNoaWZ0IE9y
  aWdpbiBDb21tdW5pdHkgSGFuZ291dDogRG90TmV0IG9uIE9wZW5TaGlmdCAx
  MDggVmlld3MsIE1hcmNoIDMxIDIwMTQgU2hhcmUgVGhpcyBUd2VldCBTaGFy
  ZSBvbiBGYWNlYm9vayBTaGFyZSBvbiBMaW5rZWRJbiBTaGFyZSBvbiBHb29n
  bGUrIEZvbGxvdyBEaWFuZSBNdWVsbGVyIFRhZ3M6IFBhYVMgRG90TmV0IG9w
  ZW5zaGlmdCBPcmlnaW4gUmVkIEhhdCBTb2Z0d2FyZSAoT3JnYW5pemF0aW9u
  KSBTcGVha2VyczogRGlhbmUgTXVlbGxlciJdLCJzeXNfdHlwZSI6WyJ3ZWJw
  YWdlIl0sInN5c190aXRsZSI6WyJXYXRjaCBPcGVuU2hpZnQgT3JpZ2luIENv
  bW11bml0eSBIYW5nb3V0OiBEb3ROZXQgb24gT3BlblNoaWZ0IGJ5IERpYW5l
  IE11ZWxsZXIgfCBSZWQgSGF0IERldmVsb3BlcnMiXX0sImhpZ2hsaWdodCI6
  eyJzeXNfY29udGVudF9wbGFpbnRleHQiOlsiT3BlblNoaWZ0IE9yaWdpbiBD
  b21tdW5pdHkgSGFuZ291dDogPHNwYW4gY2xhc3M9J2hsdCc+RG90TmV0PC9z
  cGFuPiBvbiBPcGVuU2hpZnQgMTA4IFZpZXdzLCBNYXJjaCAzMSAyMDE0IFNo
  YXJlIFRoaXMgVHdlZXQgU2hhcmUiLCJTaGFyZSBvbiBHb29nbGUrIEZvbGxv
  dyBEaWFuZSBNdWVsbGVyIFRhZ3M6IFBhYVMgPHNwYW4gY2xhc3M9J2hsdCc+
  RG90TmV0PC9zcGFuPiBvcGVuc2hpZnQgT3JpZ2luIFJlZCBIYXQgU29mdHdh
  cmUgKE9yZ2FuaXphdGlvbikiXSwic3lzX3RpdGxlIjpbIldhdGNoIE9wZW5T
  aGlmdCBPcmlnaW4gQ29tbXVuaXR5IEhhbmdvdXQ6IDxzcGFuIGNsYXNzPSdo
  bHQnPkRvdE5ldDwvc3Bhbj4gb24gT3BlblNoaWZ0IGJ5IERpYW5lIE11ZWxs
  ZXIgfCBSZWQgSGF0IERldmVsb3BlcnMiXX19LHsiX2luZGV4IjoiZGF0YV9q
  Ym9zc29yZ19zYnNfZm9ydW0iLCJfdHlwZSI6Impib3Nzb3JnX3Nic19mb3J1
  bSIsIl9pZCI6Impib3Nzb3JnX3Nic19mb3J1bS0yMzA5NzAiLCJfc2NvcmUi
  OjAuMjU0MzI0MzgsImZpZWxkcyI6eyJzeXNfdXJsX3ZpZXciOlsiaHR0cHM6
  Ly9kZXZlbG9wZXIuc3RhZ2UuamJvc3Mub3JnL3RocmVhZC8yMzA5NzAiXSwi
  c3lzX2NvbnRlbnRfcGxhaW50ZXh0IjpbIkN1cnJlbnRseSBhbSBleHBsb3Jp
  bmcgSk1TIHN1aXRhYmxlIGZvciBhIHByb2R1Y3QgYW0gd29ya2luZy4gQSBi
  YXNpYyByZXF1aXJlbWVudCBpcyB0aGUgSk1TIGlzIHRvIGJlIEZJUFMgY29t
  cGxpYW50LiBJcyBKQm9zcyBBLU1RIC8gSG9ybmV0LVEgRklQUyBjb21wbGlh
  bnQgPy4gSSBjb3VsZG4ndCBmaW5kIGEgc3BlY2lmaWMgZG9jdW1lbnRhdGlv
  bi4gIFlvdXIgYW5zd2VyIHdvdWxkIGJlIHZlcnkgaGVscGZ1bC4gVGhhbmtz
  IGluIGFkdmFuY2UgISEiXSwic3lzX2Rlc2NyaXB0aW9uIjpbIkN1cnJlbnRs
  eSBhbSBleHBsb3JpbmcgSk1TIHN1aXRhYmxlIGZvciBhIHByb2R1Y3QgYW0g
  d29ya2luZy4gQSBiYXNpYyByZXF1aXJlbWVudCBpcyB0aGUgSk1TIGlzIHRv
  IGJlIEZJUFMgY29tcGxpYW50LiBJcyBKQm9zcyBBLU1RIC8gSG9ybmV0LVEg
  RklQUyBjb21wbGlhbnQgPy4gSSBjb3VsZG4ndCBmaW5kIGEgc3BlY2lmaWMg
  ZG9jdW1lbnRhdGlvbi4gIFlvdXIgYW5zd2VyIHdvdWxkIGJlIHZlcnkgaGVs
  cGZ1bC4gVGhhbmtzIGluIGFkdmFuY2UgISEiXSwic3lzX2NyZWF0ZWQiOlsi
  MjAxMy0wNy0yOVQwMzo1MjoyMS4yMDFaIl0sInN5c19jb250cmlidXRvcnMi
  OlsiUCBNIDxwdW55YXNsb2thLm1pc2hyYUBnbWFpbC5jb20+Il0sInN5c190
  eXBlIjpbImZvcnVtdGhyZWFkIl0sInN5c190YWdzIjpbImEtbXEiLCJmaXBz
  IiwiY29tcGxpYW50Il0sInN5c190aXRsZSI6WyJJcyBKQm9zcyBBLU1RIC8g
  SG9ybmV0LVEgRklQUyBjb21wbGlhbnQgPyJdfSwiaGlnaGxpZ2h0Ijp7InN5
  c19jb250ZW50X3BsYWludGV4dCI6WyJzcGVjaWZpYyBkb2N1bWVudGF0aW9u
  LiAgWW91ciBhbnN3ZXIgd291bGQgYmUgdmVyeSA8c3BhbiBjbGFzcz0naGx0
  Jz5oZWxwZnVsPC9zcGFuPi4gVGhhbmtzIGluIGFkdmFuY2UgISEiXSwic3lz
  X2Rlc2NyaXB0aW9uIjpbInNwZWNpZmljIGRvY3VtZW50YXRpb24uICBZb3Vy
  IGFuc3dlciB3b3VsZCBiZSB2ZXJ5IDxzcGFuIGNsYXNzPSdobHQnPmhlbHBm
  dWw8L3NwYW4+LiBUaGFua3MgaW4gYWR2YW5jZSAhISJdfX1dfSwiYWdncmVn
  YXRpb25zIjp7ImZvcm1hdCI6eyJkb2NfY291bnQiOjU0MDg5fX19
